/*************************/
/*            UNICEUB - CENTRO UNIVERSITÁRIO DE BRASÍLIA               */
/*                      PRÓ-REITORIA ACADÊMICA                         */
/*                        DIRETORIA ACADÊMICA                          */
/*    FACULDADE DE TECNOLOGIA E CIÊNCIAS SOCIAIS APLICADAS - FATECS    */
/CURSO SUPERIOR DE TECNOLOGIA EM ANÁLISE E DESENVOLVIMENTO DE SISTEMAS/
/*   DISCIPLINA DE BANCO DE DADOS - 2° BIM - TURMA: ___ - 2º PER     */
/*  Professor: DEUSDETH MARIANO         Data: _ de ___ de __   */
/*************************/
/* RA: 21751177 Aluno: Cristiana Campos Cavallon________ */ 
/*************************/

-- QUESTÃO 1) Criar os objetos de BD (tabela e constraints) dos 
--            itens abaixo de acordo com o MER entregue junto com a prova.
--
-- a. Criar a tabela SAIDA_MERCADORIA, associativa entre EMPREGADO, MERCADORIA
--    e ALMOXARIFADO. Na criação da tabela (mesmo comando) incluir as constraints de
--    PRIMARY KEY, DOMÍNIO e NULIDADE, conforme nomes descritos no modelo.
-- RESOLUÇÃO:

create table SAIDA_MERCADORIA (
    data                 DATE           not null,
    ALM_codigo           NUMBER         not null,
    MER_codigo           NUMBER         not null,
    quantidade           NUMBER(4)      not null,
    EMP_matricula        NUMBER         not null,
    CONSTRAINT PK_SAI_MER PRIMARY KEY(data,ALM_codigo,MER_codigo)
);

-- b. Criar as constraints das CHAVES ESTRANGEIRAS (foreing key) da tabela   
--    SAIDA_MERCADORIA com os nomes que estão no MER físico.
-- RESOLUÇÃO:

ALTER TABLE SAIDA_MERCADORIA
ADD CONSTRAINT FK_SAIMER_ALM FOREIGN KEY (ALM_codigo) REFERENCES ALMOXARIFADO (codigo);

ALTER TABLE SAIDA_MERCADORIA
ADD CONSTRAINT FK_SAIMER_MER FOREIGN KEY (MER_codigo) REFERENCES MERCADORIA (codigo);

ALTER TABLE SAIDA_MERCADORIA
ADD CONSTRAINT FK_SAIMER_EMP FOREIGN KEY (EMP_MATRICULA) REFERENCES empregado (matricula);

-- c. Criar uma constraint de CHECK de nome CK_SAIMER_QDE para que a coluna   
--    QUANTIDADE para não permitir valores negativos, zerado ou nulos.
-- RESOLUÇÃO:

ALTER TABLE SAIDA_MERCADORIA
ADD CONSTRAINT CK_SAIMER_QDE CHECK (QUANTIDADE > 0);

-- d. Criar uma view de nome VW_ESTOQUE para mostrar o estoque de produto existente  
--    em cada ALMOXARIFADO das lojas (Considerar todos as mercadorias do cadastro): 
--    Colunas da view: nome do almoxarifado (ALMOX), descricao da mercadoria 
--    (MERCADORIA), quantidade que entrou (QDE_ENT), quantidade que saiu (QDE_SAI) 
--    e quantidade disponível (QDE_DISP). Mostrar valores 0 (ZERO) quando não existir.
-- RESOLUÇÃO:

select
      ALMOXARIFADO.NOME AS ALMOX,
      MERCADORIA.DESCRICAO AS MERCADORIA,
      SUM (ENTRADA_MERCADORIA.QUANTIDADE) AS QDE_ENT,
      SUM (SAIDA_MERCADORIA.QUANTIDADE) AS QDE_SAI,
      (SUM (ENTRADA_MERCADORIA.QUANTIDADE) - SUM (SAIDA_MERCADORIA.QUANTIDADE)) AS QDE_DISP
      
from ENTRADA_MERCADORIA join
      ALMOXARIFADO on ENTRADA_MERCADORIA.ALM_CODIGO=ALMOXARIFADO.CODIGO join
      MERCADORIA on ENTRADA_MERCADORIA.ALM_CODIGO=MERCADORIA.CODIGO LEFT JOIN
      (SAIDA_MERCADORIA JOIN
      ALMOXARIFADO ON SAIDA_MERCADORIA.CODIGO=ALMOXARIFADO.CODIGO JOIN
      MERCADORIA ON MERCADORIA.CODIGO=SAIDA_MERCADORIA.CODIGO)
GROUP BY
ALMOXARIFADO.NOME,
MERCADORIA.DESCRICAO;


-- QUESTÃO 2) Inserir os seguintes dados na tabela criada: 
--
-- a. Inserir todos os registros da tabela SAI_MER pertencente ao usuário DEMO
--    (disponível no BD para leitura) na tabela criada SAIDA_MERCADORIA.
-- RESOLUÇÃO:

INSERT INTO SAIDA_MERCADORIA
SELECT *
FROM SAI_MER;

-- b. Inserir aos seguintes dados na tabela SAIDA_MERCADORIA: 
--    Codigo da mercadoria = 25
--    Quantidade de mercadoria = 222
--    Data de aquisição = '07/06/2016'
--    Almoxarifado = 1004
--    Empregado responsável = 11111
-- RESOLUÇÃO:

INSERT INTO SAIDA_MERCADORIA VALUES ('07/06/2016',1004,25,222,11111);

-- QUESTÃO 3) Alterar na tabela SAIDA_MERCADORIA o conteúdo do campo QUANTIDADE 
--            para 444 da inclusão realizada no item b. da QUESTÃO 2).
-- RESOLUÇÃO:

UPDATE SAIDA_MERCADORIA SET QUANTIDADE=4444 WHERE DATA='07/06/2016' AND ALM_CODIGO=1004 AND MER_codigo=25;

-- QUESTÃO 4) Excluir na tabela SAIDA_MERCADORIA o registro incluído item b. da 
--            QUESTÃO 2) ACIMA se a situação do almoxarifado for 'Ativo'. 
-- RESOLUÇÃO:

DELETE FROM SAIDA_MERCADORIA 
WHERE DATA='07/06/2016' 
AND ALM_CODIGO=1004 
AND MER_codigo=25 
AND alm_codigo=(select alm_codigo from almoxarifado where situacao='Ativo' AND ALM_CODIGO=1004);

-- QUESTÃO 5) Implementar as consultas (QUERY) para selecionar os dados 
--            correspondentes nas tabelas constantes do MER e BD disponibilizado
--            para a avaliação: 
-- 
-- a. Selecionar as colunas (campos) dos índices relacionados com a tabela SAIDA_MERCADORIA.
--    Mostrar: Todas colunas ordenadas pelos nomes dos indices ascendente e pelos nomes das 
--    colunas descendentes.
-- RESOLUÇÃO:

SELECT * 
FROM USER_IND_COLUMNS
WHERE TABLE_NAME = 'SAIDA_MERCADORIA'
ORDER BY 1 DESC;

-- b. Selecionar, distintamente, as mercadorias que possuem entradas em pelo menos
--    um almoxarifado.
--    Mostrar: CODIGO e DESCRICAO ordenados decrescente pela DESCRICAO da mercadoria.
-- RESOLUÇÃO:

SELECT DISTINCT MERCADORIA.CODIGO,
MERCADORIA.DESCRICAO
FROM ENTRADA_MERCADORIA JOIN
MERCADORIA ON MERCADORIA.CODIGO=ENTRADA_MERCADORIA.MER_CODIGO
ORDER BY DESCRICAO DESC;
=============================================================================

-- c. Selecionar os empregados e seus respectivos registros de saídas de mercadorias 
--    nos almoxarifados. Mostrar 0 (ZERO) para aqueles que não realizaram registros.
--    Mostrar: MATRICULA, NOME e quantidade de registros (QDE_R), ordenado 
--             decrescente pela QDE_R.
-- RESOLUÇÃO:
SELECT EMPREGADO.MATRICULA,
        EMPREGADO.NOME,
        NVL(COUNT(SAIDA_MERCADORIA.EMP_MATRICULA),0) AS QDE_R
FROM EMPREGADO LEFT JOIN
SAIDA_MERCADORIA ON EMPREGADO.MATRICULA=SAIDA_MERCADORIA.EMP_MATRICULA
GROUP BY 
EMPREGADO.MATRICULA,
EMPREGADO.NOME
ORDER BY QDE_R DESC;
